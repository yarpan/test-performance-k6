import { check } from "k6";
import http from "k6/http";
import { Options } from "k6/options";

/**
 * SMOKE –¢–ï–°–¢–£–í–ê–ù–ù–Ø (–î–∏–º–æ–≤–∏–π —Ç–µ—Å—Ç)
 *
 * –ú–µ—Ç–∞: –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–∞–∑–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º
 *
 * –ö–æ–ª–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:
 * - –©–æ—Ä–∞–∑—É –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
 * - –ü—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∫–æ–¥—É –¥–æ–¥–∞—Ç–∫–∞
 * - –Ø–∫ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ —Ç–µ—Å—Ç—ñ–≤
 *
 * –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
 * - –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (2-5 VUs)
 * - –ö–æ—Ä–æ—Ç–∫–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (30 —Å–µ–∫—É–Ω–¥ - 3 —Ö–≤–∏–ª–∏–Ω–∏)
 * - –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –±–∞–∑–æ–≤–∏—Ö –ø–æ–º–∏–ª–æ–∫
 * - –ó–±–∏—Ä–∞—î –±–∞–∑–æ–≤—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
 */
export const options: Options = {
  cloud: {
    stages: [
      { duration: "30s", target: 3 }, // —à–≤–∏–¥–∫–æ –¥–æ—Å—è–≥–∞—î–º–æ 3 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
      { duration: "1m", target: 3 }, // –ø—ñ–¥—Ç—Ä–∏–º—É—î–º–æ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      { duration: "30s", target: 0 }, // –ø–ª–∞–≤–Ω–æ –∑–∞–≤–µ—Ä—à—É—î–º–æ
    ],
    distribution: {
      "amazon:de:frankfurt": { loadZone: "amazon:de:frankfurt", percent: 100 },
    },
    projectID: 4087876,
    name: "Pizza Smoke Test - –ë–∞–∑–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ",
  },
  vus: 3, // –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
  duration: "2m", // –∫–æ—Ä–æ—Ç–∫–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
  thresholds: {
    // –ü–æ—Ä–æ–≥–∏ –¥–ª—è smoke —Ç–µ—Å—Ç—É –±—ñ–ª—å—à –ª–æ—è–ª—å–Ω—ñ
    http_req_duration: ["p(95)<500"], // 95% –∑–∞–ø–∏—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —à–≤–∏–¥—à–µ 500–º—Å
    http_req_failed: ["rate<0.1"], // –º–µ–Ω—à–µ 10% –ø–æ–º–∏–ª–æ–∫
  },
};

// –§—É–Ω–∫—Ü—ñ—è setup –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º —Ç–µ—Å—Ç—É
// –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
export function setup() {
  console.log("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è smoke —Ç–µ—Å—Ç—É - –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó");

  const response = http.post(
    "https://quickpizza.grafana.com/api/users/token/login",
    JSON.stringify({
      username: "default",
      password: "12345678",
    })
  );

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –≤ setup
  check(response, {
    "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞": (r) => r.status === 200,
    "–û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–∫–µ–Ω": (r) => r.json("token") !== undefined,
  });

  const json = response.json();
  const token = json!["token"];

  return { token };
}

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è smoke —Ç–µ—Å—Ç—É - –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
export default function ({ token }) {
  // –¢–µ—Å—Ç—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—ñ—Ü–∏
  const response = http.post(
    "https://quickpizza.grafana.com/api/pizza",
    JSON.stringify({
      maxCaloriesPerSlice: 1000,
      mustBeVegetarian: false,
      excludedIngredients: [],
      excludedTools: [],
      maxNumberOfToppings: 5,
      minNumberOfToppings: 2,
      customName: "Smoke Test Pizza", // –ø–æ–∑–Ω–∞—á–∞—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
    }),
    {
      headers: {
        authorization: `Token ${token}`,
        "Content-Type": "application/json",
      },
    }
  );

  // –ë–∞–∑–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–ª—è smoke —Ç–µ—Å—Ç—É
  check(response, {
    "–°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ 200": (r) => r.status === 200,
    "–ß–∞—Å –≤—ñ–¥–≥—É–∫—É < 300–º—Å": (r) => r.timings.duration < 300,
    "–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –ø—ñ—Ü–∏": (r) => {
      const body = r.json();
      return !!(body && typeof body === "object");
    },
  });

  // –í smoke —Ç–µ—Å—Ç—ñ –Ω–µ –¥–æ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫–∏ - —Ç–µ—Å—Ç—É—î–º–æ –±–∞–∑–æ–≤—É —à–≤–∏–¥–∫–æ–¥—ñ—é
}

// –§—É–Ω–∫—Ü—ñ—è teardown –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–µ—Å—Ç—É
export function teardown() {
  console.log("üßπ Smoke —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ - –±–∞–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞");
}